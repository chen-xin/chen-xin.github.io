<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>丢失的蛋黄哥</title>
      <link href="/2018/11/01/%E4%B8%A2%E5%A4%B1%E7%9A%84%E8%9B%8B%E9%BB%84%E5%93%A5/"/>
      <url>/2018/11/01/%E4%B8%A2%E5%A4%B1%E7%9A%84%E8%9B%8B%E9%BB%84%E5%93%A5/</url>
      
        <content type="html"><![CDATA[<p>姐姐今天又想起她的第一个蛋黄哥了，哭的很伤心。</p><p>那是一个毛绒娃娃，大约有一张A4纸大小，是一个蛋黄哥趴在蛋白上。真不明白小女孩怎么会对这种奇怪的娃娃这么着迷。她大概是在玩手机还是看电视的时候看见的，从此就每天念叨。终于给我在东京的某个三利欧店里看见就买了一个。她爱不释手，睡觉都要抱着。但竟在白云机场，也许是虹桥，丢失了。</p><p>妈妈打了电话去机场询问，我找了在东京的同学，均未果。最后妈妈找了日本行导游代购了一个，姐姐同样的爱不释手。本来以为就这样解决了。</p><p>可是我们没想到，每一个娃娃对姐姐都是有生命的，独一无二的，得到一个新的，在我们看起来同样的娃娃对她来说是一个新朋友，而不是填上老朋友的空。每次想起她丢失的娃娃，都会伤心哭泣。</p><p>安慰人向来不是我擅长的事情，每当这时候我总是不知道说什么好。告诉她我很同情她？好假。告诉她我也丢失过重要的东西，失去过重要的人？我讨厌比惨。告诉她我失去的时候是怎么做的？好像没试过，但人跟人不一样，我能放下的，未必她也能。</p><p>外婆是更不会安慰人的。她在说着什么那个娃娃肯定已经被丢垃圾桶啦，很残很破了，带了细菌了，不要想它了。如果别人跟我这么说我心爱的东西或喜欢的人，不跟他打架也要绝交。上次她买了活的牛蛙回来，等满脑子都是“青蛙是人类的朋友”的小姑娘终于给它想好名字的时候把它宰了，还请小姑娘尝，太可怕了。老一辈对人的感情毫无概念，我对此很无奈，但无法跟老人说明白，就像无法让盲人理解色彩。</p><p>以往这种时候，我只会抱着她，用手指在她背上轻轻按摩，希望她会好过一点。</p><p>但今天又干了一天无聊的活，回到家只希望谁也不认识我，不要跟我说话。姐姐又来恳求我打电话给机场，我无心应答，只想立刻死掉，这样就不需要听见任何人的任何要求，也不需要回答了。可是我没有。</p><p>我黑着脸给她查了白云机场的电话，然后告诉她要自己去找，要提供日期，航班号。但那已经是大半年前的事情了。姐姐哭的更伤心了。</p><p>我一心想从这烦人的境地脱身，结果更糟糕了。如此无情地打击一个无助的孩子，真是一个坏爸爸。我出门去散步，希望回来的时候她已经好了，可是并没有。外婆告诉我今天姐姐为我铺了床，我就躺在上面看着她哭，但无能为力。最后哭着去睡觉了。</p><p>明天就会好了，以往也是这样。我安慰自己倒是挺在行的。明天我要告诉她，很抱歉不能给她找到原来的蛋黄哥了。人总会想念过去的朋友，失落的情感总会让人伤心，难过了就哭一会也没什么。希望这些话不要又把她弄哭了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Setting my Ubuntu environment</title>
      <link href="/2018/08/19/Setting-my-Ubuntu-environment/"/>
      <url>/2018/08/19/Setting-my-Ubuntu-environment/</url>
      
        <content type="html"><![CDATA[<p>I reinstalled my Thinkpad X220i with Windows 10, Ubuntu 18.04, OSX 10.13.6 recently, reinstall OS is always tedious.</p><ul><li>Sogou pinyin</li><li>wps office</li><li>net connections</li><li>firefox and chrome plugins</li><li>vim and ycm</li><li>anaconda with vscode</li><li>web site accounts: github, coding, gitee, stackoverflow, dockerhub, edx, coursera, google</li><li>setup git<br>-<br>-</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download required files into "download" directory</span></span><br><span class="line"></span><br><span class="line">sudo sed -i <span class="string">'s#http://cn.archive.ubuntu.com/#https://mirrors.ustc.edu.cn/#g'</span> /etc/apt/sources.list</span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt purge ibus</span><br><span class="line">sudo apt install firmware-b43-installer fcitx shadowsocks polipo vim git gcc g++ make cmake</span><br><span class="line"></span><br><span class="line">sudo dpkg -i wps</span><br><span class="line">sudo dpkg -i sogou</span><br><span class="line">./Anaconda</span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">"foo@bar.com"</span></span><br><span class="line">git config --global user.name <span class="string">"foo bar"</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment">## create ~/.vimrc</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br><span class="line"></span><br><span class="line"><span class="comment">## start vim then :PluginInstall</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/.vim/bundle/YouCompleteMe</span><br><span class="line">./install.py --clang-completer --java-completer --build-dir ~/下载/ycm-build</span><br><span class="line"><span class="built_in">cd</span> ~/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/tern_runtime</span><br><span class="line">yarn  <span class="comment"># or npm install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create ~/.tern-config</span></span><br><span class="line"></span><br><span class="line">copy ssh files</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create .npmrc, .pip/pip.conf</span><br><span class="line"></span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes</span><br><span class="line"></span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> setup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>From requirement to software product</title>
      <link href="/2018/08/05/From-requirement-to-software-product/"/>
      <url>/2018/08/05/From-requirement-to-software-product/</url>
      
        <content type="html"><![CDATA[<h1 id="what-do-I-think-about-software-engineering"><a href="#what-do-I-think-about-software-engineering" class="headerlink" title="what do I think about software engineering"></a>what do I think about software engineering</h1><p>Let’s start from a user manage module.</p><h1 id="The-basic-requirements"><a href="#The-basic-requirements" class="headerlink" title="The basic requirements"></a>The basic requirements</h1><ul><li>user has properties of: name, login name, password, email, phone, logo…</li><li>admin can CRUD users</li><li>user can modify owe password, logo</li></ul><h2 id="step-1-requirement-analysis"><a href="#step-1-requirement-analysis" class="headerlink" title="step 1: requirement analysis"></a>step 1: requirement analysis</h2><p>First of all, what does the boss <strong>NOT</strong> say?</p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> test </tag>
            
            <tag> design </tag>
            
            <tag> pattern </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bird</title>
      <link href="/2018/05/23/Bird/"/>
      <url>/2018/05/23/Bird/</url>
      
        <content type="html"><![CDATA[<p>Getting up early not only introduces city of 4am, but also entertains you with free concert of various birds. I know in dawn roosters crow, but never know many other birds also sing untill recently, or, I just had forgotten. I was night owl since my student age, about 20 years ago. At first I enjoin my finalcial independance, free from desciplin, and indulge myself to WOW. </p><p>As a mid-aged man, there are endless work at office, and endless homework at home. I start to miss student age. A particular day schedule for me would be:<br>  7:00 get up, breakfirst;<br>  8:00-18:00 work, lunch, nap at office<br>  19:00-21:00 make kids complete there homework<br>  21:00-?? play with kids</p><p>There would be no time for to revite my dreaming student age. Last month, I encountered an introduce to a Japanese woman, doctor, mother of 4 children, Havard PHd. She makes her time by sleep at 9pm, the same time as the kids, and get up at 3am, then she earned 4 extra hours a day, without any distraction. What a good idea! </p>]]></content>
      
      
      
        <tags>
            
            <tag> dialy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Setup rsync to publish drone.io built artifacts</title>
      <link href="/2018/03/31/Setup-rsync-to-publish-drone-io-built-artifacts/"/>
      <url>/2018/03/31/Setup-rsync-to-publish-drone-io-built-artifacts/</url>
      
        <content type="html"><![CDATA[<p>In <a href="../../../2018/03/27/Integrate-all-self-hosted-drone-io-with-gitea/">This article</a> we managed to setup drone to automate build and publish a project, but the publish part was inconvenient: using “cp” to publish artifacts means we have to mount target volume, which would not be accessable if we want to publish to remote host, and extra config to set the registry “trusted”.</p><p>“rsync is an open source utility that provides fast incremental file transfer.” With this incremental feather, we can omit redundant publish of unchanged resources, like pictures added to project long long ago.</p><p>In this article, we compose the following tasks:</p><ul><li>build the docker image for rsync publishing</li><li>add rsync server to all-self-hosted develop environment with drone.io</li><li>update the drone pipeline to use the new publish method</li></ul><h1 id="build-the-docker-image-for-rsync-publishing"><a href="#build-the-docker-image-for-rsync-publishing" class="headerlink" title="build the docker image for rsync publishing"></a>build the docker image for rsync publishing</h1><p>All we needed was 3 additional packages based the official Alpine image: rsync, openssh and sshpass. I’d post the foll Dockerfile here and explane the instructions below:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim:set ft=dockerfile:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"><span class="keyword">MAINTAINER</span> Chen Xin chenxin.az@outlook.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># set mirror if required</span></span><br><span class="line"><span class="comment"># use:</span></span><br><span class="line"><span class="comment">#   docker build -t chenxinaz/sshrsync --build-arg CN_MIRROR=1 .</span></span><br><span class="line"><span class="comment"># another mirror:</span></span><br><span class="line"><span class="comment">#   https://mirror.tuna.tsinghua.edu.cn/alpine/$OS_VER/main/ </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> CN_MIRROR=<span class="number">0</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="keyword">if</span> [ <span class="variable">$CN_MIRROR</span> = 1 ] ; \</span></span><br><span class="line"><span class="bash">  <span class="keyword">then</span> OS_VER=$(grep main /etc/apk/repositories | sed <span class="string">'s#/#\n#g'</span> | grep <span class="string">"v[0-9]\.[0-9]"</span>) \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"using mirrors for <span class="variable">$OS_VER</span>"</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">echo</span> https://mirrors.ustc.edu.cn/alpine/<span class="variable">$OS_VER</span>/main/ &gt; /etc/apk/repositories; \</span></span><br><span class="line"><span class="bash">  <span class="keyword">fi</span> \</span></span><br><span class="line"><span class="bash">  &amp;&amp; apk add --no-cache rsync openssh sshpass\</span></span><br><span class="line"><span class="bash">  &amp;&amp; sed -ri <span class="string">'s/^#PermitRootLogin\s+.*/PermitRootLogin yes/'</span> /etc/ssh/sshd_config</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">COPY entrypoint.sh /</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">EXPOSE 873</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">CMD [<span class="string">"/entrypoint.sh"</span>]</span></span><br></pre></td></tr></table></figure><ul><li><em>ARGCN_MIRROR:</em> set this argiment at image build time to accelerate build progress.</li><li><em>The “sed -ri…” line:</em> enable root login</li><li><em>CMD [“/entrypoint.sh”]:</em> <code>entrypoint.sh</code> starts sshd and rsync in daemon mode, I use <code>CMD</code> in Dockerfile so we can use this image as a rsync client without start the servers by specifying command in runtime.</li></ul><p>In the <code>entrypoint.sh</code>, we configure rsync to use utf-8(this may not needed with ssh, not tested yet), generate host keys for sshd, set root password via environment arguments, then start the sshd and rsync servers. The <code>touch /inited</code> line is used to indicate that host key generation and root password setting should only run in for the first time. The full content is following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sshpass -p $&#123;ROOT_PASSWORD&#125; rsync --progress -avz *  root@server:/data</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF&gt; /etc/rsyncd.conf</span><br><span class="line">charset = utf-8</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f /inited ]; <span class="keyword">then</span></span><br><span class="line">  ssh-keygen -A</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;ROOT_PASSWORD&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"root:<span class="variable">$&#123;ROOT_PASSWORD&#125;</span>"</span> | chpasswd</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  touch /inited</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">/usr/sbin/sshd</span><br><span class="line"></span><br><span class="line">/usr/bin/rsync --daemon --no-detach --<span class="built_in">log</span>-file /dev/stdout</span><br></pre></td></tr></table></figure><p><strong>Security Note</strong></p><p>The above config allows rsync to write to <strong>ANY</strong> directory in server, thus should not use in production, and requires cautious with target directories.</p><h1 id="add-rsync-server-to-all-self-hosted-develop-environment-with-drone-io"><a href="#add-rsync-server-to-all-self-hosted-develop-environment-with-drone-io" class="headerlink" title="add rsync server to all-self-hosted develop environment with drone.io"></a>add rsync server to all-self-hosted develop environment with drone.io</h1><p>Add the following part to the docker-compose.yml file in <a href="../../../2018/03/27/Integrate-all-self-hosted-drone-io-with-gitea/">This article</a>, we need a rsync server for this all-self-hosted environment. To publish to remote server, you would not need this.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rsync:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="string">chenxinaz/sshrsync</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ROOT_PASSWORD=foofoo</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="attr">    - www:</span><span class="string">/www</span></span><br><span class="line"><span class="attr">  networks:</span></span><br><span class="line"><span class="attr">    www:</span></span><br></pre></td></tr></table></figure><p>What’s in the above config:</p><ul><li>create a service using our rsync container</li><li>setup root password with environment variable, this was defined in the image’s entrypoint script. Since this container expose no port, it does not matter writing simple plan text password here</li><li>mount target volume: www</li><li>connect to network www, which drone’s workspace connects to </li></ul><h1 id="update-the-drone-pipeline-to-use-the-new-publish-method"><a href="#update-the-drone-pipeline-to-use-the-new-publish-method" class="headerlink" title="update the drone pipeline to use the new publish method"></a>update the drone pipeline to use the new publish method</h1><p>The publish stage would be:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">publish:</span><br><span class="line">  image: chenxinaz/sshrsync</span><br><span class="line">  environment:</span><br><span class="line">    - ROOT_PASSWORD=foofoo</span><br><span class="line">  commands:</span><br><span class="line">    - mkdir -p ~/.ssh</span><br><span class="line">    - ssh-keyscan rsync &gt; ~/.ssh/known_hosts</span><br><span class="line">    - sshpass -p $$&#123;ROOT_PASSWORD&#125; rsync -avz public/  root@rsync:/www/nginx/html/</span><br></pre></td></tr></table></figure><p>In the above config, we:</p><ul><li>use the new image we built in client mode to do the publish work</li><li>transport root password via environment vaiable. You can specify the password idrectly in the last line, while environment variable would be more explict, so we know what to change in next project.</li><li>pre fetch host key with <code>ssh-keyscan</code>, so there would be no prompt on accepting esda keys.</li><li>run rsync with sshpass, so no ssh login password would prompted.</li></ul><h1 id="Pitfalls-on-the-rsync-protocal"><a href="#Pitfalls-on-the-rsync-protocal" class="headerlink" title="Pitfalls on the rsync protocal"></a>Pitfalls on the rsync protocal</h1><p>I first tried to run rsync without ssh, it do transfered, but with error message like “failed to set permission on .1.txt.AbcF1G” for each file, with a dot prefix and a base64 extension suffix of my original filename. I assume them temporary or partial files during transfer. It takes me a couple of days to getrid of them:</p><ul><li>run server as root: file transfered with correct permissions, but has errors and rsync return 1, which cause drone.io to decide build failed</li><li>specify –partial-dir, –temp-dir: still have errors with different directory</li><li>setup server to run as nobody with “fake super”: will lost permissions on target</li></ul><p>I googled a lot, few informations allocated, none satisfied my problem. Then I noticed <strong>“Also note that the rsync daemon protocol does not currently provide any encryption of the data that is transferred over the connection. Only authentication is provided. Use ssh as the transport if you want encryption. “</strong> in rsync.conf’s manpage. We can hardly image some server allow data transfer unencrypted nowadays, so ssh was what we should use. </p><p>The ssh login prompt and esda key prompt killed quit some time, finally I managed to resolved them with <code>ssh-keyscan</code> and <code>sshpass</code>. Thanks Google, StackOverflow, and rsync ofcause.</p>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> drone.io </tag>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Integrate all-self-hosted drone.io with gitea</title>
      <link href="/2018/03/27/Integrate-all-self-hosted-drone-io-with-gitea/"/>
      <url>/2018/03/27/Integrate-all-self-hosted-drone-io-with-gitea/</url>
      
        <content type="html"><![CDATA[<p>“<a href="https://drone.io" target="_blank" rel="noopener">Drone.io</a> is an open source Continuous Delivery platform that automates your testing and release workflows”. Drone has built in integration with many source code management systems, like Github, Gitlabs, Gogs and Gitea, Coding has an integration instruction in drone’s document too. Drone is docker based, size of the two required image(drone/server, drone/agent) sum up to only 50MB and less, it has pretty modern ui, which attached me at the firet grance.</p><p><a href="https://gitea.io" target="_blank" rel="noopener">Gitea</a> is forked from <a href="https://gogs.io" target="_blank" rel="noopener">Gogs</a>, they are almost identical, even the “A painless self-hosted git service” annoncement. They both actually are what they annonced, Gogs is small(less then 160MB docker image), while Gitea is even smaller(70MB), that’s why I perfer Gitea.</p><p>This article is about how to setup an all selfhosted continuous delivery environment with drone.io and gitea.</p><h1 id="The-site-map"><a href="#The-site-map" class="headerlink" title="The site map"></a>The site map</h1><p>We have at least a gitea server and a drone server, for convinent, a web server should be included. We shall access all the services from the host machine, and the servers able connect to each other. </p><p>For host machine’s access to the serivces, we can expose all service ports to host machine, then we can visit them via “localhost:3000”, “localhost:5000”, etc, that’s ugly. I tried to mount services under sub directories like “localhost/gitea”, “localhost/drone”, but end up with that drone does not support mounnting to a sub directory. Subdomain is the rescure. I hacked my hosts file and setup nginx reverse proxy to archive this.</p><p>the hosts file of the host machine:</p><blockquote><p>127.0.0.1       <a href="http://www.xin.me" target="_blank" rel="noopener">www.xin.me</a><br>127.0.0.1       xin.me<br>127.0.0.1       gogs.xin.me<br>127.0.0.1       gitea.xin.me<br>127.0.0.1       jenkins.xin.me<br>127.0.0.1       drone.xin.me<br>127.0.0.1       demo.xin.me</p></blockquote><p>the nginx conf of the nginx container, which exposes port 80:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim:set ft=nginx:</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> xin.local www.xin.local _; <span class="comment"># your_server_ip</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Prevent ipv6 resolve in docker</span></span><br><span class="line">    <span class="attribute">resolver</span> <span class="number">127.0.0.1</span> ipv6=<span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/www.access.log main;</span><br><span class="line">    <span class="attribute">error_log</span> /var/log/nginx/www.<span class="literal">error</span>.log <span class="literal">warn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   /www/nginx/html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> drone.xin.local;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://drone-server:8000;</span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_buffering</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">chunked_transfer_encoding</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> gitea.xin.local;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Prevent ipv6 resolve in docker</span></span><br><span class="line">    <span class="attribute">resolver</span> <span class="number">127.0.0.1</span> ipv6=<span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/gitea.access.log main;</span><br><span class="line">    <span class="attribute">error_log</span> /var/log/nginx/gitea.<span class="literal">error</span>.log <span class="literal">warn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">100m</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://gitea:3000/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Most above config were copied from drone and gitea’s document, I am not going to discuss about them indepth here.</p><h1 id="The-compose-file"><a href="#The-compose-file" class="headerlink" title="The compose file"></a>The compose file</h1><p>Drone itself starts up with at lease 2 containers, one drone server and one or more drone agent, official document suggests run them by docker compose. With the same compose file we setup our nginx reverse proxy server and PostgreSQL(for gitea) together. </p><h2 id="Networks"><a href="#Networks" class="headerlink" title="Networks"></a>Networks</h2><p>First we define two internal networks, a “www” network to connect all the exposed service, including nginx, gitea and drone, with the nginx server holding domain and subdomain names like “xin.local”, “drone.xin.local”, docker automaticlly assign a short host name to each service, like “gitea”, “drone”, so nginx can proxy to them by name instead of static assigned ip address. Part of the compose file looks like:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  www:</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  www:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">nginx:alpine</span></span><br><span class="line"><span class="attr">  restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"80:80"</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">./data/log/nginx:/var/log/nginx</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">./conf/nginx/conf.d:/etc/nginx/conf.d</span></span><br><span class="line"><span class="attr">    - www:</span><span class="string">/www</span></span><br><span class="line"><span class="attr">  depends_on:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">drone-server</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">gitea</span></span><br><span class="line"><span class="attr">  networks:</span></span><br><span class="line"><span class="attr">    www:</span></span><br><span class="line"><span class="attr">      aliases:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">xin.local</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">gitea.xin.local</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">drone.xin.local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  drone:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      www:</span></span><br><span class="line"><span class="attr">  gitea:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      www:</span></span><br></pre></td></tr></table></figure><p>In this config, when drone service want’s access gitea, it visits “<a href="http://gitea.xin.local&quot;" target="_blank" rel="noopener">http://gitea.xin.local&quot;</a>, which resolves to the nginx server, then nginx proxies the request to “http:gitea:3000” according to the previous nginx config, thus we make drone and gitea access each other through nginx reverse proxy, with the same domain name as the host machine.<br>The above config also mounts host volumes for nginx log and config, we shall had created the log directory and put the nginx config we described in the first part of this articl into the config directory. And the named volume <em>www</em> is to persistantly hold static files, e.g. my hexo blog. We shall add named volumes to save persistant data for each service.</p><p>We also defined the dependicy for nginx, it should wait for drone-server and gitea start first, or nginx might complain site unaccessable and exit.</p><h2 id="Drone-service"><a href="#Drone-service" class="headerlink" title="Drone service"></a>Drone service</h2><p>Drone has a sample compose file for integrate with gitea, we can simply copy it and make some changes according to our environment. </p><p>You should notice the <code>DRONE_NETWORK</code> line. If not explicitly defined, drone will create a new network for containers in pipeline, and that network will not be able to resolve our <em>gitea.xin.local</em> domain, that makes pipline fail on git clone stage. Thankfully we can assign one in compose file, as the following:</p><p>Another config option not in the drone’s sample configure is the <code>DRONE_ADMIN</code>. If you need to mount volumes in pipline, e.g. cache build result, use copy to deploy, etc, you must set the repository to <strong>Trusted</strong> in repository setting, which only avaliable to drone admin user.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">drone-server:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="string">drone/drone</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="attr">    - drone:</span><span class="string">/var/lib/drone/</span></span><br><span class="line"><span class="attr">  restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_ADMIN=xin</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_OPEN=true</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_HOST=http://drone.xin.local</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_GITEA=true</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_GITEA_URL=http://gitea.xin.local</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_SECRET=c676-9241-d916-3d6a</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_NETWORK=devstack_www</span></span><br><span class="line"><span class="attr">  networks:</span></span><br><span class="line"><span class="attr">    www:</span></span><br><span class="line"><span class="attr">    postgres:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">drone-agent:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="string">drone/agent</span></span><br><span class="line"><span class="attr">  command:</span> <span class="string">agent</span></span><br><span class="line"><span class="attr">  restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">  depends_on:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">drone-server</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_SERVER=drone-server:9000</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">DRONE_SECRET=c676-9241-d916-3d6a</span></span><br><span class="line"><span class="attr">  networks:</span></span><br><span class="line"><span class="attr">    www:</span></span><br></pre></td></tr></table></figure><p>In the above config, we make drone use our <em>devstack_www</em> network, which is the <em>www</em> network in compose file’s network section. Docker automatically append dirname to network name, in my case the directory holding my <em>docker-compose.yml</em> is <em>devstack</em>. We have to set the full name of the network so drone will use it for pipelines. If you are not sure what’s the correct name of that network, you can run <code>docker network ls</code> after the compose up. Ofcause you can create an isolated network for pipelines, just make gitea connect to it with the same domain name.</p><p>Almost done, now what we should care about is all above. For the full docker compose file, see the end of this article.</p><h1 id="the-pipline"><a href="#the-pipline" class="headerlink" title="the pipline "></a>the pipline </h1><p>Let’s create our first pipeline. First we copy the sample nodejs pipeline from drone’s documents, then add npm and other required mirror configs to environment variables(Thanks to the greet fakking woll), mount our deploy target volume, and specify our build and deploy commands.</p><p>Note in the publish state I used <code>ls -alR public</code> to see what’s actually generated, and <code>env | grep DRONE</code> to see what can we get from drone during pipeline.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pipeline:</span></span><br><span class="line"><span class="attr">  build:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">node:8-alpine</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">npm_config_registry=https://registry.npm.taobao.org/</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">SQLITE3_BINARY_SITE=http://npm.taobao.org/mirrors/sqlite3</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">SASS_BINARY_SITE=http://npm.taobao.org/mirrors/node-sass</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">phantomjs_cdnurl=https://npm.taobao.org/mirrors/phantomjs/</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">CHROMEDRIVER_CDNURL=http://npm.taobao.org/mirrors/chromedriver</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">SELENIUM_CDNURL=http://npm.taobao.org/mirrorss/selenium</span></span><br><span class="line"><span class="attr">    commands:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  publish:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">alpine</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - devstack_www:</span><span class="string">/www</span></span><br><span class="line"><span class="attr">    commands:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">/www/nginx/html</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ls</span> <span class="bullet">-alR</span> <span class="string">public</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">env</span> <span class="string">| grep DRONE</span></span><br><span class="line"><span class="string">      - cp -ur public/* /www/nginx/html/</span></span><br></pre></td></tr></table></figure><h1 id="Up-and-test"><a href="#Up-and-test" class="headerlink" title="Up and test"></a>Up and test</h1><p>All done, it’s time to test it out:</p><ul><li><code>docker-compose up</code> to bring up the services</li><li>configure gitea and add the first repo</li><li>login to drone, and activate the repo</li><li>goto gitea and see authorized application in account setting, and webhook in repository setting</li><li>config the repo as <strong>trusted</strong></li><li>do webhook test from gitea, or push new commits to gitea.</li><li>see what’s going on in drone.</li></ul><h1 id="What’s-nest"><a href="#What’s-nest" class="headerlink" title="What’s nest"></a>What’s nest</h1><ul><li>cache to accelarate build</li><li>build status notify</li><li>build badges and reports</li><li>common delever method(ssh/rsync/git release..etc)</li></ul><h1 id="The-full-docker-compose-file"><a href="#The-full-docker-compose-file" class="headerlink" title="The full docker-compose file"></a>The full docker-compose file</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  gitea:</span></span><br><span class="line"><span class="attr">  pg:</span></span><br><span class="line"><span class="attr">  www:</span></span><br><span class="line"><span class="attr">  drone:</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  www:</span></span><br><span class="line"><span class="attr">  postgres:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  www:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">nginx:alpine</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"80:80"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/log/nginx:/var/log/nginx</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./conf/nginx/conf.d:/etc/nginx/conf.d</span></span><br><span class="line"><span class="attr">      - www:</span><span class="string">/www</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">drone-server</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">gitea</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      www:</span></span><br><span class="line"><span class="attr">        aliases:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">xin.local</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">gitea.xin.local</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">drone.xin.local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  postgres:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">chenxinaz/pg_jieba:alpine</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">POSTGRES_PASSWORD=asdfasdf123</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - pg:</span><span class="string">/var/lib/postgresql/data</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./conf/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      postgres:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  gitea:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">gitea/gitea</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - gitea:</span><span class="string">/data</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">postgres</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      www:</span></span><br><span class="line"><span class="attr">      postgres:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  drone-server:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">drone/drone</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - drone:</span><span class="string">/var/lib/drone/</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_ADMIN=xin</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_OPEN=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_HOST=http://drone.xin.local</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_GITEA=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_GITEA_URL=http://gitea.xin.local</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_SECRET=c676-9241-d916-3d6a</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_NETWORK=devstack_www</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      www:</span></span><br><span class="line"><span class="attr">      postgres:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  drone-agent:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">drone/agent</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">agent</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">drone-server</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_SERVER=drone-server:9000</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">DRONE_SECRET=c676-9241-d916-3d6a</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="attr">      www:</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> drone.io </tag>
            
            <tag> gitea </tag>
            
            <tag> ci </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Setup Windows 10 develop environment</title>
      <link href="/2018/03/14/Setup-Windows-10-develop-environment/"/>
      <url>/2018/03/14/Setup-Windows-10-develop-environment/</url>
      
        <content type="html"><![CDATA[<h1 id="Install-every-thing"><a href="#Install-every-thing" class="headerlink" title="Install every thing"></a>Install every thing</h1><p>Cleanly install windows 10, then install every thing needed:</p><ul><li>Anaconda</li><li>Nodejs</li><li>Git</li><li>Office 365</li><li>Haskell</li><li>Java</li><li>VsCode</li><li>FreePlane</li><li>Docker CE</li><li>7Zip</li><li>SumartraPDF</li><li>lua</li><li>msys</li><li>python2/3</li><li>LLVM</li><li>CMAKE</li><li>Chrome</li><li>Firefox</li><li>ss</li><li>BaiduNetdisk</li><li>Weiyun</li><li>ZeroNet</li><li>Chocolatey</li><li>SQLiteStudio</li><li>PGAdmin3</li><li>FoxitPDF</li><li>Inkscape</li><li>PotPlayer</li><li>QQ Pinyin</li><li>QQ</li><li>Wechat</li><li>R</li><li>R Studio</li></ul><h1 id="Setup-account-and-credentials"><a href="#Setup-account-and-credentials" class="headerlink" title="Setup account and credentials"></a>Setup account and credentials</h1><ul><li>Chrome</li><li>Firefox</li><li>Onedrive</li><li>Dockerhub</li><li>Github</li><li>Gitee</li><li>Coding</li><li>Google</li><li>Bandwagon</li><li>Virmarch</li><li>Segmentfault</li><li>Stackoverflow</li><li>Quora</li><li>Npm</li></ul><h1 id="Software-source-mirrors"><a href="#Software-source-mirrors" class="headerlink" title="Software source mirrors"></a>Software source mirrors</h1><ul><li>pip</li><li>npm</li><li>Docker registry</li></ul><h1 id="Browser-plugins-Both-Chrome-and-Firefox"><a href="#Browser-plugins-Both-Chrome-and-Firefox" class="headerlink" title="Browser plugins(Both Chrome and Firefox)"></a>Browser plugins(Both Chrome and Firefox)</h1><ul><li>Stylish</li><li>SwitchyOmega</li><li>Vue developer tools</li><li>React developer tools</li><li>Redux</li></ul><h1 id="Docker-images"><a href="#Docker-images" class="headerlink" title="Docker images"></a>Docker images</h1><ul><li>alpine</li><li>postgres:alpine</li><li>python:alpine</li><li>node:8-alpine</li><li>Jenkins/Jenkins</li><li>Debain</li><li>gogs</li><li>nginx</li><li>chenxinaz/zhparser</li><li>chenxinaz/jieba</li></ul>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> config </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Create a Hexo theme from scratch 3-The post page</title>
      <link href="/2018/02/20/Create-a-Hexo-theme-from-scratch-3-The-post-page/"/>
      <url>/2018/02/20/Create-a-Hexo-theme-from-scratch-3-The-post-page/</url>
      
        <content type="html"><![CDATA[<p>The post view and the index view are rather similer. We first make copy of our <em>index.pug</em> and name it <em>post.pug</em>, then make 2 modifications:</p><p>First the content part, we have only one post to deal with, and all the post variables now become page variables, we shall modify our content to fit that:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#content</span><br><span class="line">  .content</span><br><span class="line">    .post</span><br><span class="line">      .post-header</span><br><span class="line">        .post-title</span><br><span class="line">          a.title(href=url_for(page.path))</span><br><span class="line">            != page.title</span><br><span class="line">        .post-meta</span><br><span class="line">          .post-meta-group</span><br><span class="line">            != full_date(page.date)</span><br><span class="line">          .post-meta-group</span><br><span class="line">            for tag in page.tags.toArray()</span><br><span class="line">              a(href=url_for(tag.path))= tag.name</span><br><span class="line">      .post-content</span><br><span class="line">        != page.content</span><br><span class="line">      .post-footer &lt;----------&gt;</span><br></pre></td></tr></table></figure></p><p>Second we add a <em>toc</em> widget to show post tocs:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.side-widget</span><br><span class="line">  .side-widget-toc</span><br><span class="line">    .widget-title #&#123; __(&apos;toc&apos;) &#125;</span><br><span class="line">    .widget</span><br><span class="line">      != toc(page.content, &#123;list_number: true&#125;)</span><br></pre></td></tr></table></figure></p><p>We love copy and paste, but once we want change someting in common, it’s not cool updating many times. Let’s put the common parts together:</p><p>create a <em>layout.pug</em>, put common parts in, and leave the special parts as <em>block</em>:</p><p>Then we shall see that the <code>.post</code> part of the index view and the post view are also similer, we can create pug mixin to deal with them:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mixin post_mixin(post)</span><br><span class="line">  .post</span><br><span class="line">    .post-header</span><br><span class="line">      .post-title</span><br><span class="line">        a.title(href=url_for(post.path))</span><br><span class="line">          != post.title</span><br><span class="line">      .post-meta</span><br><span class="line">        .post-meta-group</span><br><span class="line">          != full_date(post.date)</span><br><span class="line">        .post-meta-group</span><br><span class="line">          for tag in post.tags.toArray()</span><br><span class="line">            a(href=url_for(tag.path))= tag.name</span><br><span class="line">    .post-content</span><br><span class="line">      if post.excerpt</span><br><span class="line">        != post.excerpt</span><br><span class="line">      else</span><br><span class="line">        != post.content</span><br><span class="line">    .post-footer &lt;----------&gt;</span><br></pre></td></tr></table></figure><p>Now our index.pug becomes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">extends _layout.pug</span><br><span class="line">include _post.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  for post in page.posts.toArray()</span><br><span class="line">    +post_mixin(post)</span><br></pre></td></tr></table></figure></p><p>And post.pug becomes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">extends _layout.pug</span><br><span class="line">include _post.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  +post_mixin(page)</span><br><span class="line"></span><br><span class="line">block side-toc</span><br><span class="line">  .side-widget</span><br><span class="line">    .side-widget-toc</span><br><span class="line">      .widget-title #&#123; __(&apos;toc&apos;) &#125;</span><br><span class="line">      .widget</span><br><span class="line">        != toc(page.content, &#123;list_number: true&#125;)</span><br></pre></td></tr></table></figure></p><p>You may already noticed that the <em>toc</em> widget displaies 2 sets of number, and indent too much between levels. We shall style them like categories:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ul, ol</span><br><span class="line">  list-style-type: none</span><br><span class="line">  margin: 0</span><br><span class="line">  padding: 0</span><br><span class="line"></span><br><span class="line">ul.category-list, ul.archive, ol</span><br><span class="line">  ul, ol</span><br><span class="line">  padding-left: 1em</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> stylus </tag>
            
            <tag> pug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Create a Hexo theme from scratch 2 - Styling the index page</title>
      <link href="/2018/02/16/Create-a-Hexo-theme-from-scratch-2-Styling-the-index-page/"/>
      <url>/2018/02/16/Create-a-Hexo-theme-from-scratch-2-Styling-the-index-page/</url>
      
        <content type="html"><![CDATA[<p>In step 1 we created an index page with every required parts, the index page works ugly, now let’s make it pretty.<br>We will use stylus, which is already supported by default.</p><h1 id="First-create-the-az-styl-file"><a href="#First-create-the-az-styl-file" class="headerlink" title="First, create the az.styl file "></a>First, create the <em>az.styl</em> file </h1><p>Recall that we already have a stylesheet link refers to ‘/css/az.css’ in out <em>index.pug</em> file, it’s time to implement it.</p><p>First create <code>~/hexo-blog/themes/az/source/css/az.styl</code>. With stylus plugin, which was installed by default, Hexo will compile it to <em>az.css</em> and save to the public folder, so generated html page can access it via <code>/css/az.css</code>. Hexo server will watch and apply changes on any refered style files.</p><p>For develop convienent, we should install <em>hexo-browsersync</em> plugin for the <em>hexo-blog</em> project, so page will be auto reload on any change(excepts *.pug template change, Hexo server woun’t reload them).</p><h1 id="Now-open-the-az-styl-let’s-make-header-content-sider-parts-where-they-should-be"><a href="#Now-open-the-az-styl-let’s-make-header-content-sider-parts-where-they-should-be" class="headerlink" title="Now open the az.styl, let’s make header, content, sider parts where they should be"></a>Now open the <em>az.styl</em>, let’s make <em>header</em>, <em>content</em>, <em>sider</em> parts where they should be</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sider-<span class="attribute">width</span> = <span class="number">400px</span></span><br><span class="line">header-<span class="attribute">height</span> = <span class="number">200px</span></span><br><span class="line">base-<span class="attribute">font</span> = <span class="number">18px</span> sans-serif</span><br><span class="line"></span><br><span class="line">body</span><br><span class="line">  <span class="attribute">background-color</span>: Cornsilk</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">font</span>: base-font</span><br><span class="line"></span><br><span class="line">#header</span><br><span class="line">  <span class="attribute">background-color</span>: Lightblue</span><br><span class="line">  <span class="attribute">height</span>: header-height</span><br><span class="line"></span><br><span class="line">#<span class="attribute">content</span></span><br><span class="line">  <span class="attribute">margin-right</span>: sider-width</span><br><span class="line">  </span><br><span class="line">#sider</span><br><span class="line">  <span class="attribute">background-color</span>: Whitesmoke</span><br><span class="line">  <span class="attribute">position</span>: fixed</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">  <span class="attribute">width</span>: sider-width</span><br></pre></td></tr></table></figure><p>Here we defined variables <code>sider-width</code> and <code>header-height</code> to avoid <em>magic numbers</em> and easily change them if needed. We also defined the base font for the whole site here.<br>Adding background-color for each part would help us verify if the parts layout properly, we can remove them later.<br>We also defined the base font for the whole site here.</p><h1 id="Then-style-the-post"><a href="#Then-style-the-post" class="headerlink" title="Then style the post:"></a>Then style the post:</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">.post</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">40px</span></span><br><span class="line">  .post-header</span><br><span class="line">    <span class="attribute">background-color</span>: Lightgray</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span></span><br><span class="line">    .post-title</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">2em</span></span><br><span class="line">      <span class="attribute">font-weight</span>: bold</span><br><span class="line">    .post-meta</span><br><span class="line">      <span class="attribute">background-color</span>: Gainsboro</span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">      .post-meta-group</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span></span><br><span class="line">        a</span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span></span><br><span class="line">  .post-<span class="attribute">content</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span></span><br><span class="line">    h1</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.6em</span></span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">    h2</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.4em</span></span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">    h3</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.2em</span></span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">    <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, h6</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1em</span></span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1em</span></span><br></pre></td></tr></table></figure><h1 id="Then-code-highlights"><a href="#Then-code-highlights" class="headerlink" title="Then code highlights"></a>Then code highlights</h1><p>We shall try the default <em>landscape</em> theme’s highlight style: <code>cp ~/hexo-blog/themes/landscape/source/css/_partial/highlight.styl ~/hexo-blog/themes/Azurewind/source/css/</code>, then append <code>@import highlight</code> to <em>az.styl</em>.</p><p>Oops, hexo-server complains some missing variables. We have to add the required vars in our <em>az.styl</em>, before the <code>@import highlight</code> line, I preffered to add them to top of the file:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font</span>-mono = mono</span><br><span class="line"><span class="attribute">font-size</span> = <span class="number">16px</span></span><br><span class="line"><span class="attribute">line-height</span> = <span class="number">1.8em</span></span><br></pre></td></tr></table></figure><p>Syntax highlight still not working. That’s because the <em>highlight.styl</em> try to highlight <code>.article-entry</code>, while our template has only <code>.post</code> entry. A easy way to resolve this would be tell <em>highlight.styl</em> to fit out template, change the <code>.article-entry</code> line to <code>.article-entry, .post</code>.</p><p>Now we highlight works, but also ugly scrollbars in code block. Styling <code>.highlight table</code> to <code>width: 100%</code> Resolves this problem.</p><h1 id="The-sider"><a href="#The-sider" class="headerlink" title="The sider"></a>The sider</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#sider</span><br><span class="line">  <span class="attribute">background-color</span>: Whitesmoke</span><br><span class="line">  <span class="attribute">position</span>: fixed</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">  <span class="attribute">width</span>: sider-width</span><br><span class="line">  .sider</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span></span><br><span class="line">    .side-widget</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span></span><br><span class="line">      .widget-title</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1.2em</span></span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line">        <span class="attribute">border-bottom</span>: inset</span><br><span class="line"></span><br><span class="line">      .side-widget-topnav</span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">justify-content</span>: space-around</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">2em</span></span><br><span class="line">        a</span><br><span class="line">          <span class="attribute">display</span>: inline-block</span><br><span class="line">          <span class="attribute">text-align</span>: center</span><br><span class="line">          <span class="attribute">flex-grow</span>: <span class="number">1</span></span><br><span class="line">          &amp;:hover</span><br><span class="line">            <span class="attribute">text-decoration</span>: none</span><br><span class="line">            <span class="attribute">border-bottom</span>: inset</span><br><span class="line"></span><br><span class="line">      .side-widget-search</span><br><span class="line">        input#search-site</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">          <span class="attribute">box-sizing</span>: border-box</span><br><span class="line">          </span><br><span class="line">      <span class="selector-tag">span</span>[class$=<span class="string">"list-count"</span>]</span><br><span class="line">        &amp;:before</span><br><span class="line">          <span class="attribute">content</span>: <span class="string">' ('</span></span><br><span class="line">        &amp;:after</span><br><span class="line">          <span class="attribute">content</span>: <span class="string">')'</span></span><br><span class="line"></span><br><span class="line">      ul</span><br><span class="line">        <span class="attribute">list-style-type</span>: none</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">ul</span><span class="selector-class">.category-list</span>, <span class="selector-tag">ul</span>.archive</span><br><span class="line">        ul</span><br><span class="line">          <span class="attribute">padding-left</span>: <span class="number">1em</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">ul</span>.tag-list</span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">flex-wrap</span>: wrap</span><br><span class="line">        li</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">2px</span> <span class="number">10px</span> <span class="number">2px</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>We use pseudo element to add braces to post count in archive, tag and category lists.<br>The tag list was displayed as cloud. We don’t use Hexo’s tag-cloud helper here because it dosen’t have post count property.</p><h1 id="The-result"><a href="#The-result" class="headerlink" title="The result"></a>The result</h1><p>Now the index page looks like a blog, and the category, tag and archive links works. Thou still ugly to the critics.<br>We sudpend refining the index page for now, and move on to the post view.</p>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> stylus </tag>
            
            <tag> pug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Create a Hexo theme from scratch 1 - Stack everything together</title>
      <link href="/2018/02/16/Create-a-Hexo-theme-fromscratch-1-Stack-everything-togther/"/>
      <url>/2018/02/16/Create-a-Hexo-theme-fromscratch-1-Stack-everything-togther/</url>
      
        <content type="html"><![CDATA[<p>A few days ago the idea of making my own blog hit me. After some investigation, I decided to start from Hexo, a static blog generator with plenty of plugin and themes.<br>There are lots of cool themes already, some actully meet my needs, but the idea of creating my cool theme hit me harder.<br>I expected to finish the theme job within a couple of hours, and time laughed at the arrogent newbie.</p><h1 id="Step0-Prepare"><a href="#Step0-Prepare" class="headerlink" title="Step0: Prepare"></a>Step0: Prepare</h1><ol><li>Install Hexo with the default “landscape” theme, create some posts to feel if you like it.</li><li>Read the Hexo docs on theme, template, variables and helpers.</li><li>Inspect some published themes, try to figure out how they works.</li><li>Pick template language. For it is the year of pug of Chinese luna calendar, pug it is.</li><li>Prepare project structure(suppose Hexo installed to <em>~/hexo-blog</em>), and configure theme to ‘AzureWind’:</li></ol><blockquote><p>At the very least, a theme should contain an index template.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/hexo-blog/themes</span><br><span class="line">mkdir AzureWind</span><br><span class="line"><span class="built_in">cd</span> AzureWind</span><br><span class="line">touch _config.yml</span><br><span class="line">mkdir -p languages layout <span class="comment"># scripts source/css source/js source/img</span></span><br><span class="line"><span class="built_in">cd</span> layout</span><br><span class="line">touch index.pug <span class="comment"># layout.pug archive.pug category.pug tag.pug post.pug page.pug</span></span><br><span class="line">git init</span><br></pre></td></tr></table></figure><h1 id="Step1-Stack-everything-together"><a href="#Step1-Stack-everything-together" class="headerlink" title="Step1: Stack everything together"></a>Step1: Stack everything together</h1><blockquote><p>TARGET: Create the index view, with every thing we want in it.</p></blockquote><h2 id="First-the-pug-template-skeleton"><a href="#First-the-pug-template-skeleton" class="headerlink" title="First the pug template skeleton:"></a>First the pug template skeleton:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    meta(http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;)</span><br><span class="line">    meta(name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;)</span><br><span class="line">    meta(name=&quot;description&quot; content=config.description)</span><br><span class="line">    link(rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/az.css&quot;)</span><br><span class="line">body</span><br></pre></td></tr></table></figure><p>The second <em>meta</em> line is required for responsive design ,which will auto layout for mobile and desktop. We shall implement that later, for now, just leave it here.<br>The third <em>meta</em> line was description about our blog, which retrieved from Hexo configure.<br>We shall definatly have some styles, so put the style sheet link here.</p><h2 id="Then-we-define-what-should-appear-on-our-index-view"><a href="#Then-we-define-what-should-appear-on-our-index-view" class="headerlink" title="Then we define what should appear on our index view:"></a>Then we define what should appear on our index view:</h2><ul><li>A header part, with background image and some text, maybe blog title, brieves,  etc.</li><li>The content part, which hold posts, with the following components within each post:<ul><li>post header<ul><li>title</li><li>post date</li><li>tags</li></ul></li><li>the post content</li><li>post footer</li></ul></li><li>The sider bar, with the following components:<ul><li>Home, RSS and About button</li><li>search bar</li><li>site categories</li><li>site tags</li></ul></li></ul><p>Let’s create the <em>header</em>, <em>content</em> and <em>sider</em> part, and define css classes for each components:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    meta(http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;)</span><br><span class="line">    meta(name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;)</span><br><span class="line">    meta(name=&quot;description&quot; content=config.description)</span><br><span class="line">    link(rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/az.css&quot;)</span><br><span class="line">  body</span><br><span class="line">    #header</span><br><span class="line">      .site-title</span><br><span class="line">        != config.title</span><br><span class="line">      .site-subtitle</span><br><span class="line">        != config.subtitle</span><br><span class="line"></span><br><span class="line">    #content</span><br><span class="line">      for post in page.posts.toArray()</span><br><span class="line">        .post</span><br><span class="line">          .post-header</span><br><span class="line">            .post-title</span><br><span class="line">              a.title(href=url_for(post.path))</span><br><span class="line">                != post.title</span><br><span class="line">            .post-meta</span><br><span class="line">              .post-meta-group</span><br><span class="line">                != full_date(post.date)</span><br><span class="line">              .post-meta-group</span><br><span class="line">                for tag in post.tags.toArray()</span><br><span class="line">                  a(href=url_for(tag.path))= tag.name</span><br><span class="line">          .post-content</span><br><span class="line">            if post.excerpt</span><br><span class="line">              != post.excerpt</span><br><span class="line">            else</span><br><span class="line">              != post.content</span><br><span class="line">          .post-footer &lt;----------&gt;</span><br><span class="line">        hr</span><br><span class="line"></span><br><span class="line">    #sider</span><br><span class="line">      .side-widget</span><br><span class="line">        .side-widget-topnav</span><br><span class="line">          a(href=url_for(config.root)) Home</span><br><span class="line">          a(href=url_for(theme.about)) About</span><br><span class="line">          a(href=url_for(theme.rss)) RSS</span><br><span class="line"></span><br><span class="line">      .side-widget</span><br><span class="line">        .side-widget-search</span><br><span class="line">          input#search-site(placeholder=&quot;Search...&quot;)</span><br><span class="line"></span><br><span class="line">      if site.categories.length</span><br><span class="line">        .side-widget</span><br><span class="line">          .side-widget-list</span><br><span class="line">            h3.widget-title #&#123; __(&apos;categories&apos;) &#125;</span><br><span class="line">            .widget</span><br><span class="line">              != list_categories(&#123;show_count: true&#125;)</span><br><span class="line"></span><br><span class="line">      if site.tags.length</span><br><span class="line">        .side-widget</span><br><span class="line">          .side-widget-list</span><br><span class="line">            h3.widget-title #&#123; __(&apos;tags&apos;) &#125;</span><br><span class="line">            .widget</span><br><span class="line">              != list_tags(&#123;show_count: true&#125;)</span><br><span class="line"></span><br><span class="line">      .side-widget</span><br><span class="line">        .side-widget-list</span><br><span class="line">          h3.widget-title #&#123; __(&apos;archives&apos;) &#125;</span><br><span class="line">          .widget</span><br><span class="line">            != list_archives(&#123;show_count: true&#125;)</span><br></pre></td></tr></table></figure><p>Please note how to get post variables via <code>for post in page.posts.toArray()</code>, and same as tags.<br>And note that the ‘About’ and ‘RSS’ page should be defined in theme configure. In our case, it would be <em>~/hexo-blog/themes/AzureWind/_config.yml</em>.<br>We add hyperlink to post in title so we don’t need the <em>more..</em> button.<br>With full_date() Hexo helper we get date and time formated as what defined in site’s <em>_config.yml</em>.<br>The <code>__(&#39;categories&#39;)</code> is for internationalization, that will be discussed later.<br>For all 3 primary parts(<em>header</em>, <em>content</em>, <em>sider</em>), we also create a div to wrap all the content, so we can the padding, margin, border for it without intersecting other parts.11</p><h2 id="Restart-Hexo-server-to-see-the-result"><a href="#Restart-Hexo-server-to-see-the-result" class="headerlink" title="Restart Hexo server to see the result"></a>Restart Hexo server to see the result</h2><p><em>note</em>: While styles(*.css, *,styl, etc) will be automatic applied on change by Hexo server, templates(our *.pug) files sometimes won’t, we have to manully restart to see template changes. That’s why we put everything together first!</p><p>The page looks awful, all parts flow from top to bottom, post title looked same as normal text, no code highlight. We can just inspect to assure every part id and css class names correctly applied. In the next step, let’s add some style to it.  </p>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> stylus </tag>
            
            <tag> pug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Boot Linux from Youku-k1 rk3288 box</title>
      <link href="/2018/02/14/Boot-Linux-from-Youku-k1-rk3288-box/"/>
      <url>/2018/02/14/Boot-Linux-from-Youku-k1-rk3288-box/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># plugin sd card, find out which is it</span><br><span class="line">lsblk</span><br><span class="line"># assume we see /sdb here</span><br></pre></td></tr></table></figure><p>It may be a rk3066 board..<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd kernel</span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- rockchip_linux_defconfig</span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Lorem ipsum</title>
      <link href="/2018/02/14/Lorem/"/>
      <url>/2018/02/14/Lorem/</url>
      
        <content type="html"><![CDATA[<h1 id="Lorem-Ipsum"><a href="#Lorem-Ipsum" class="headerlink" title="Lorem Ipsum"></a>Lorem Ipsum</h1><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.<br>Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.<br>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.<br>Aenean nec lorem. In porttitor. Donec laoreet nonummy augue.<br>Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.<br>Fusce aliquet pede non pede. Suspendisse dapibus lorem pellentesque magna. Integer nulla.<br>Donec blandit feugiat ligula. Donec hendrerit, felis et imperdiet euismod, purus ipsum pretium metus, in lacinia nulla nisl eget sapien. Donec ut est in lectus consequat consequat.<br>Etiam eget dui. Aliquam erat volutpat. Sed at lorem in nunc porta tristique.<br>Proin nec augue. Quisque aliquam tempor magna. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.<br>Nunc ac magna. Maecenas odio dolor, vulputate vel, auctor ac, accumsan id, felis. Pellentesque cursus sagittis felis.</p>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lorem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>test-code.md</title>
      <link href="/2018/02/14/test-code-md/"/>
      <url>/2018/02/14/test-code-md/</url>
      
        <content type="html"><![CDATA[<p>Javascript</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">11</span></span><br><span class="line"><span class="built_in">console</span>.log(a)</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>, (req, res, next) =&gt;&#123;</span><br><span class="line">  <span class="keyword">let</span> accessibles = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (url <span class="keyword">of</span> req.session.user.accessibles)</span><br><span class="line">    accessibles[url] = <span class="literal">true</span>;</span><br><span class="line">  res.render(<span class="string">'frame.docman.html'</span>,&#123;</span><br><span class="line">    <span class="string">'realname'</span>:req.session.user.realname,</span><br><span class="line">    <span class="string">'activemenu'</span>:<span class="string">'docman'</span>,</span><br><span class="line">    <span class="string">'accessibles'</span>: accessibles</span><br><span class="line">&#125;)&#125;);</span><br></pre></td></tr></table></figure><p>Python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PathLib <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(a):</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileChooser</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.parent = parent</span><br><span class="line">        self.initialize()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ask_dir</span><span class="params">(self)</span>:</span></span><br><span class="line">        dirname = askdirectory()</span><br><span class="line">        <span class="keyword">if</span> dirname:</span><br><span class="line">            self.source_path.set(dirname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_check</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.process_info.set(<span class="string">'正在处理，请稍候..'</span>)</span><br><span class="line">        self.parent.config(cursor=<span class="string">"wait"</span>)</span><br><span class="line">        self.parent.update()</span><br><span class="line">        <span class="comment"># check_path(self.source_path.get())</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = check_path(self.source_path.get()) + <span class="string">'\n完成！请检查单位目录下的[核查结果.xlsx]文件。'</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            result = str(e)</span><br><span class="line">        self.process_info.set(result)</span><br><span class="line">        self.parent.config(cursor=<span class="string">""</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Build YouCompleteMe for vim under windows</title>
      <link href="/2018/02/10/Build-YouCompleteMe-for-vim-under-windows/"/>
      <url>/2018/02/10/Build-YouCompleteMe-for-vim-under-windows/</url>
      
        <content type="html"><![CDATA[<p>I have get vim under git-bash work with python, now it’s time to setup YouCompleteMe, the most powerful vim completion plugin ever.<br>There is no binary packages for ycm under windows found, so install from source is the only option. </p><h1 id="Prerequists"><a href="#Prerequists" class="headerlink" title="Prerequists"></a>Prerequists</h1><ul><li>vim with python, like <a href="../Build-vim-with-python-lua-for-git-bash-under-windows">this</a></li><li>Visual C++ x64 Native Build Tools, from Misrosoft.</li></ul><h1 id="Get-sources"><a href="#Get-sources" class="headerlink" title="Get sources"></a>Get sources</h1><p>The following steps do clone ycm from github to some directory, I do this to figure out what is all required for my other computer, in which I shall not do the boring build steps again. Simply install it from vundle works enough.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># under git-bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /d/downloads</span><br><span class="line">mkdir vim_install</span><br><span class="line"><span class="built_in">cd</span> vim_install</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Valloric/YouCompleteMe.git</span><br><span class="line"><span class="built_in">cd</span> YouCompleteMe</span><br><span class="line"><span class="comment"># wait long time for the following command to finish</span></span><br><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><h1 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h1><p>open “Visual C++ 2015 x64 Native Build Tools Command Prompt” and run the following commands, change msvc version as what is installed:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> d:\downloads\vim_install\YouCompleteMe</span><br><span class="line">PATH=%PATH%;D:\downloads\vim_install\cmake-3.10.1-win64-x64\bin</span><br><span class="line"><span class="built_in">set</span> EXTERNAL_LIBCLANG_PATH=D:/downloads/vim_install/LLVM-5.0.0-win64</span><br><span class="line"><span class="built_in">set</span> EXTRA_CMAKE_ARGS=-DPATH_TO_LLVM_ROOT=d:/downloads/vim_install/LLVM-5.0.0-win64</span><br><span class="line"><span class="comment"># (we have set llvm_root in the above line) </span></span><br><span class="line">python install.py --msvc 14 --build-dir d:/downloads/vim_install/ycm_build --clang-completer --js-completer</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another try </span></span><br><span class="line">cmake -G <span class="string">"Visual Studio 14 Win64"</span> \</span><br><span class="line">  -DPATH_TO_LLVM_ROOT=d:/downloads/vim_install/LLVM-5.0.0-win64 \</span><br><span class="line">  -DPYTHON_EXECUTABLE:FILEPATH=c:/dev_tools/Python36/python.exe \</span><br><span class="line">  -DPYTHON_LIBRARYS=C:/dev_tools/Python36/libs \</span><br><span class="line">  -DPYTHON_INCLUDE_DIR=C:/dev_tools/Python36/include . ../YouCompleteMe/third_party/ycmd/cpp \</span><br><span class="line">  &amp;&amp; cmake --build . --target ycm_core --config Release</span><br></pre></td></tr></table></figure><p>fix windows path under msys with Tern:<br>create a file <code>~/.vim/bundle/YouCompleteMe/third_party/ycmd/ycmd/completers/javascript/msys_path_fix.py</code> as follow:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fix_path</span> <span class="params">(path)</span>:</span></span><br><span class="line">    p = path</span><br><span class="line">    <span class="keyword">if</span> platform.system() == <span class="string">'Windows'</span> <span class="keyword">and</span> re.match(<span class="string">'^/[a-z]/.*'</span>, path, re.I):</span><br><span class="line">        p = p[<span class="number">1</span>] + <span class="string">':'</span> + p[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(fix_path(<span class="string">'/c/aa/bb.proj'</span>))</span><br><span class="line"></span><br><span class="line">    print(fix_path(<span class="string">'c:\\aa\cc\\1.js'</span>))</span><br></pre></td></tr></table></figure><p>then edit the <code>tern_completer.py</code> in same folder, add line in header part:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> msys_path_fix</span><br></pre></td></tr></table></figure><p>add line to last of <code>_SetServerProjectFileAndWorkingDirectory</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_SetServerProjectFileAndWorkingDirectory</span><span class="params">( self, request_data )</span>:</span></span><br><span class="line">  filepath = request_data[ <span class="string">'filepath'</span> ]</span><br><span class="line">  self._server_project_file = FindTernProjectFile( filepath )</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> self._server_project_file:</span><br><span class="line">    _logger.warning( <span class="string">'No .tern-project file detected: %s'</span>, filepath )</span><br><span class="line">    self._server_working_dir = os.path.dirname( filepath )</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    _logger.info( <span class="string">'Detected Tern configuration file at: %s'</span>,</span><br><span class="line">                  self._server_project_file )</span><br><span class="line">    self._server_working_dir = os.path.dirname( self._server_project_file )</span><br><span class="line">  <span class="comment"># the next line add to fix path problem</span></span><br><span class="line">  self._server_working_dir = msys_path_fix.fix_path(self._server_working_dir)</span><br><span class="line">  _logger.info( <span class="string">'Tern paths are relative to: %s'</span>, self._server_working_dir )</span><br></pre></td></tr></table></figure><h1 id="Save-for-future-use"><a href="#Save-for-future-use" class="headerlink" title="Save for future use:"></a>Save for future use:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># under git-bash</span></span><br><span class="line"></span><br><span class="line">tar zcvf ycm.bin.tar.gz YouCompleteMe/third_party/ycmd/ycm_core.pyd YouCompleteMe/third_party/ycmd/libclang.dll</span><br></pre></td></tr></table></figure><p>~/.tern-config</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"libs"</span>: [</span><br><span class="line">        <span class="string">"browser"</span>,</span><br><span class="line">        <span class="string">"underscore"</span>,</span><br><span class="line">        <span class="string">"jquery"</span></span><br><span class="line">            ],</span><br><span class="line">        <span class="attr">"plugins"</span>: &#123;</span><br><span class="line">          <span class="attr">"node"</span>: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="vimrc"><a href="#vimrc" class="headerlink" title="~/.vimrc"></a>~/.vimrc</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nocompatible              <span class="comment">" be iMproved, required</span></span><br><span class="line"><span class="keyword">filetype</span> off                  <span class="comment">" required</span></span><br><span class="line"></span><br><span class="line"><span class="comment">" set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br><span class="line"><span class="comment">" alternatively, pass a path where Vundle should install plugins</span></span><br><span class="line"><span class="comment">"call vundle#begin('~/some/path/here')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">" let Vundle manage Vundle, required</span></span><br><span class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">" The following are examples of different formats supported.</span></span><br><span class="line"><span class="comment">" Keep Plugin commands between vundle#begin/end.</span></span><br><span class="line"><span class="comment">" plugin on GitHub repo</span></span><br><span class="line">Plugin <span class="string">'tpope/vim-fugitive'</span></span><br><span class="line">Plugin <span class="string">'vim-airline/vim-airline'</span></span><br><span class="line">Plugin <span class="string">'vim-airline/vim-airline-themes'</span></span><br><span class="line">Plugin <span class="string">'tomasiser/vim-code-dark'</span></span><br><span class="line">Plugin <span class="string">'sheerun/vim-polyglot'</span></span><br><span class="line"><span class="comment">" Plugin 'shougo/neocomplete.vim'</span></span><br><span class="line"><span class="comment">" Plugin 'pangloss/vim-javascript'</span></span><br><span class="line"><span class="comment">" Plugin 'posva/vim-vue'</span></span><br><span class="line">Plugin <span class="string">'scrooloose/nerdtree'</span></span><br><span class="line">Plugin <span class="string">'Valloric/YouCompleteMe'</span></span><br><span class="line"><span class="comment">" All of your Plugins must be added before the following line</span></span><br><span class="line"><span class="keyword">call</span> vundle#end()            <span class="comment">" required</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span>    <span class="comment">" required</span></span><br><span class="line"><span class="comment">" To ignore plugin indent changes, instead use:</span></span><br><span class="line"><span class="comment">"filetype plugin on</span></span><br><span class="line"><span class="comment">"</span></span><br><span class="line"><span class="comment">" Brief help</span></span><br><span class="line"><span class="comment">" :PluginList       - lists configured plugins</span></span><br><span class="line"><span class="comment">" :PluginInstall    - installs plugins; append  to update or just :PluginUpdate</span></span><br><span class="line"><span class="comment">" :PluginSearch foo - searches for foo; append  to refresh local cache</span></span><br><span class="line"><span class="comment">" :PluginClean      - confirms removal of unused plugins; append  to auto-approve removal</span></span><br><span class="line"><span class="comment">"</span></span><br><span class="line"><span class="comment">" see :h vundle for more details or wiki for FAQ</span></span><br><span class="line"><span class="comment">" Put your non-Plugin stuff after this line</span></span><br><span class="line"><span class="comment">"</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"><span class="keyword">set</span> statusline+=%&#123;StatuslineGit()&#125;</span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="keyword">set</span> t_Co=<span class="number">256</span></span><br><span class="line"><span class="keyword">set</span> t_ut=</span><br><span class="line"><span class="keyword">colorscheme</span> codedark</span><br><span class="line"><span class="comment">" let g:airline_theme = 'codedark'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">" let g:neocomplete#enable_at_startup = 1</span></span><br><span class="line"><span class="keyword">autocmd</span> vimenter * NERDTree</span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">8</span> softtabstop=<span class="number">0</span> expandtab <span class="built_in">shiftwidth</span>=<span class="number">4</span> smarttab</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_python_binary_path</span> = <span class="string">'python'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">autocmd</span> Filetype html <span class="keyword">setlocal</span> <span class="keyword">ts</span>=<span class="number">2</span> <span class="keyword">sts</span>=<span class="number">2</span> <span class="keyword">sw</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">autocmd</span> Filetype <span class="keyword">ruby</span> <span class="keyword">setlocal</span> <span class="keyword">ts</span>=<span class="number">2</span> <span class="keyword">sts</span>=<span class="number">2</span> <span class="keyword">sw</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">autocmd</span> Filetype javascript <span class="keyword">setlocal</span> <span class="keyword">ts</span>=<span class="number">2</span> <span class="keyword">sts</span>=<span class="number">2</span> <span class="keyword">sw</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> youcompleteme </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Build vim with python, lua for git bash under windows</title>
      <link href="/2018/02/10/Build-vim-with-python-lua-for-git-bash-under-windows/"/>
      <url>/2018/02/10/Build-vim-with-python-lua-for-git-bash-under-windows/</url>
      
        <content type="html"><![CDATA[<p>On how to build vim for git-bash with lua, python, python3 feathers.</p><h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>Git-bash comes with a set of commandline tool that ALMOST satisfy all my needs, it even has a up-to-date vim included, which says:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Dec 14 2017 09:34:59)</span><br><span class="line">包含补丁: 1-1305</span><br><span class="line">编译者 chen_x@DESKTOP-S3M9UF8</span><br><span class="line">巨型版本 无图形界面。  可使用(+)与不可使用(-)的功能:</span><br><span class="line">+acl             +comments        +farsi           +langmap         +mouse_netterm   +printer         +tag_binary      +visual</span><br><span class="line">+arabic          +conceal         +file_in_path    +libcall         +mouse_sgr       +profile         +tag_old_static  +visualextra</span><br><span class="line">+autocmd         +cryptv          +find_in_path    +linebreak       -mouse_sysmouse  +python/dyn      -tag_any_white   +viminfo</span><br><span class="line">-autoservername  +cscope          +float           +lispindent      +mouse_urxvt     +python3/dyn     -tcl             +vreplace</span><br><span class="line">-balloon_eval    +cursorbind      +folding         +listcmds        +mouse_xterm     +quickfix        +termguicolors   +wildignore</span><br><span class="line">-browse          +cursorshape     -footer          +localmap        +multi_byte      +reltime         +terminal        +wildmenu</span><br><span class="line">++builtin_terms  +dialog_con      +fork()          +lua             +multi_lang      +rightleft       +terminfo        +windows</span><br><span class="line">+byte_offset     +diff            +gettext         +menu            -mzscheme        +ruby/dyn        +termresponse    +writebackup</span><br><span class="line">+channel         +digraphs        -hangul_input    +mksession       +netbeans_intg   +scrollbind      +textobjects     -X11</span><br><span class="line">+cindent         -dnd             +iconv           +modify_fname    +num64           +signs           +timers          -xfontset</span><br><span class="line">-clientserver    -ebcdic          +insert_expand   +mouse           +packages        +smartindent     +title           -xim</span><br><span class="line">+clipboard       +emacs_tags      +job             -mouseshape      +path_extra      +startuptime     -toolbar         -xpm</span><br><span class="line">+cmdline_compl   +eval            +jumplist        +mouse_dec       +perl/dyn        +statusline      +user_commands   -xsmp</span><br><span class="line">+cmdline_hist    +ex_extra        +keymap          -mouse_gpm       +persistent_undo -sun_workshop    +vertsplit       -xterm_clipboard</span><br><span class="line">+cmdline_info    +extra_search    +lambda          -mouse_jsbterm   +postscript      +syntax          +virtualedit     -xterm_save</span><br><span class="line">     系统 vimrc 文件: &quot;/etc/vimrc&quot;</span><br><span class="line">     用户 vimrc 文件: &quot;$HOME/.vimrc&quot;</span><br><span class="line"> 第二用户 vimrc 文件: &quot;~/.vim/vimrc&quot;</span><br><span class="line">      用户 exrc 文件: &quot;$HOME/.exrc&quot;</span><br><span class="line">       defaults file: &quot;$VIMRUNTIME/defaults.vim&quot;</span><br><span class="line">         $VIM 预设值: &quot;/usr/share/vim&quot;</span><br><span class="line">编译方式: gcc -c -I. -Iproto -DHAVE_CONFIG_H   -I/usr/include/ncursesw  -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1</span><br><span class="line">链接方式: gcc   -L. -pipe -fstack-protector  -L/usr/local/lib -Wl,--as-needed -o vim.exe        -lm    -lncursesw -liconv -lacl -lintl  -L/usr/local/l</span><br><span class="line">ib -llua -Wl,--enable-auto-import -Wl,--export-all-symbols -Wl,--enable-auto-image-base -fstack-protector-strong  -L/usr/lib/perl5/core_perl/CORE -lpe</span><br><span class="line">rl -lpthread -ldl -lcrypt</span><br></pre></td></tr></table></figure><p>But according to <a href="https://github.com/git-for-windows/git/issues/827" target="_blank" rel="noopener">this issue</a>, there would be no python in the official git-for-windows releases, it causes many popular plugins unable to work under git-bash vim. Some people <a href="https://stackoverflow.com/questions/33519853/how-do-i-add-python-support-in-vim-in-git-bash" target="_blank" rel="noopener">suggested</a> to use msys instead.</p><p>I tried, but encountered some other problem, like  <a href="https://stackoverflow.com/questions/11693074/git-credential-cache-is-not-a-git-command" target="_blank" rel="noopener">git-credential-cache</a>. It bores me to get msysgit work as git-for-windows, then I tried to compile my vim for git-bash.</p><p>As a newbee, I struggled days to figure out that msys and mingw are quiet different things, finally make my way out to get my vim with python/python3/lua under git-bash. Here are the steps.</p><h1 id="Install-msys64"><a href="#Install-msys64" class="headerlink" title="Install msys64"></a>Install msys64</h1><p>Download msys2-x86_64-<em>yyyymmdd</em>.exe from <a href="http://www.msys2.org/" target="_blank" rel="noopener">Msys2</a> and install to <code>c:\msys64</code>.</p><p>We can make some convinent settings(optional):</p><p>Start the msys shell and enter the following lines:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt;&gt; /etc/minttyrc</span><br><span class="line">BoldAsFont=yes</span><br><span class="line">Columns=150</span><br><span class="line">Rows=50</span><br><span class="line">Font=Source Code Pro</span><br><span class="line">FontHeight=10</span><br><span class="line">Transparency=off</span><br><span class="line">OpaqueWhenFocused=no</span><br><span class="line">CursorType=underscore</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">echo &quot;alias ls=&apos;ls --color&apos;&quot; &gt;&gt; /etc/bash.bashrc</span><br></pre></td></tr></table></figure><p>Associate msys shell in windows right-button menu(optional):</p><p>Create an <code>a.reg</code> file as following and import into the windows regestry:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\msys]</span><br><span class="line">@=&quot;Open MSYS64 here&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\dev_tools\\msys64\\msys2.ico&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\msys\command]</span><br><span class="line">@=&quot;C:\\dev_tools\\msys64\\msys2_shell.cmd -here&quot;</span><br></pre></td></tr></table></figure></p><p>Add pacman mirrors(optional):</p><p>In the msys shell, run the following commands:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;1i Server = http://mirrors.ustc.edu.cn/msys2/mingw/i686&apos; /etc/pacman.d/mirrorlist.mingw32</span><br><span class="line">sed -i &apos;1i Server = http://mirrors.ustc.edu.cn/msys2/mingw/x86_64&apos; /etc/pacman.d/mirrorlist.mingw64</span><br><span class="line">sed -i &apos;1i Server = http://mirrors.ustc.edu.cn/msys2/msys/$arch&apos; /etc/pacman.d/mirrorlist.msys</span><br></pre></td></tr></table></figure></p><p>Synchronize package databases with <code>pacman -Syu</code>. May need to kill the terminal and re-run <code>pacman -Su</code>.</p><p>Install dev packages:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S base-devel binutils python3 ruby ncurses-devel libcrypt-devel gcc</span><br></pre></td></tr></table></figure><h1 id="Build-vim-from-source"><a href="#Build-vim-from-source" class="headerlink" title="Build vim from source:"></a>Build vim from source:</h1><p>I choose to build from <a href="https://github.com/Alexpux/MSYS2-packages/vim" target="_blank" rel="noopener">Package scripts for MSYS2 </a>, for it is quit update-to-date and with patches to work friendly under msys.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># if you don&apos;t have msysgit, run the next command under git-bash</span><br><span class="line">git clone https://github.com/Alexpux/MSYS2-packages.git</span><br><span class="line"></span><br><span class="line"># the following comamnds run under msys</span><br><span class="line">cd MSYS2-packages/vim</span><br><span class="line">makepkg</span><br></pre></td></tr></table></figure><p>Package vim:</p><p>The previous step do created a vim package for pacman, but git-bash dosn’t have one. So pack for ourself:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd MSYS2-packages/vim/src</span><br><span class="line">make DESTDIR=/d/downloads/vim_install install</span><br><span class="line">cd /d/downloads/vim_install</span><br><span class="line">tar zcf vim_install.tar.gz ./ /usr/lib/python* /usr/bin/msys-python*.dll</span><br></pre></td></tr></table></figure><h1 id="Copy-vim-to-git-bash"><a href="#Copy-vim-to-git-bash" class="headerlink" title="Copy vim to git-bash"></a>Copy vim to git-bash</h1><p>In git-bash, run the following:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf /d/downloads/vim_install/vim_install.tar.gz -C /</span><br></pre></td></tr></table></figure><p>Now start vim from git-bash and run simple test:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:py3 print(2+1)</span><br></pre></td></tr></table></figure></p><h1 id="Next-steps"><a href="#Next-steps" class="headerlink" title="Next steps"></a>Next steps</h1><p>Configure vim, setup plugins like vundle, youcompleteme, etc.</p>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> msys </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Settting up Electron, VUE, express develop enrironment under Windows 10</title>
      <link href="/2018/02/10/Settting-up-Electron-VUE-express-develop-enrironment-under-Windows-10/"/>
      <url>/2018/02/10/Settting-up-Electron-VUE-express-develop-enrironment-under-Windows-10/</url>
      
        <content type="html"><![CDATA[<h2 id="Native-node-modules"><a href="#Native-node-modules" class="headerlink" title="Native node modules"></a>Native node modules</h2><p>Since the node version installed might be different from what electron uses, that prevents some local native codes run inside electron, e.g. sqlite3. it would be convinent to prepare native node module build toolsets.</p><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h3><ol><li>Refer to <a href="https://github.com/nodejs/node-gyp" target="_blank" rel="noopener">https://github.com/nodejs/node-gyp</a> and follow the instructions to setup Visual C++ Build Environment and Python 2.7.</li><li><p>Config node-gyp to use installed build tools:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set msvs_version 2015</span><br><span class="line">npm config set python /path/to/executable/python2.7</span><br></pre></td></tr></table></figure></li><li><p>Edit ~/.npmrc to setup npm mirrors:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">registry=https://registry.npm.taobao.org/</span><br><span class="line">sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span><br><span class="line">phantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs</span><br><span class="line">ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/</span><br><span class="line">python=c:/Python27/python.exe</span><br><span class="line">msvs_version=2015</span><br></pre></td></tr></table></figure></li></ol><p>We can see that the msvs_version and python config of the previous step was already there, this means we can edit this file directly to set these config parameters.</p><ol start="4"><li>Clean install required modules:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;project directory&gt;</span><br><span class="line">yarn cache clean</span><br><span class="line">yarn</span><br><span class="line">yarn add sqlite3 electron electron-rebuild --dev</span><br><span class="line">node_modules/.bin/electron-rebuild</span><br><span class="line">node_modules/.bin/electron-rebuild -a ia32</span><br></pre></td></tr></table></figure></li></ol><p>For the network issue of cn, the <code>electron-rebuild</code> command might fail for several times, just restart to have all required packages downloaded to ~/.node-gyp.</p><ol start="5"><li><p>Check build result: <code>ls -R node_modules/sqlite3/lib/binding</code> should show 3 directories like:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">electron-v1.7-win32-ia32/</span><br><span class="line">electron-v1.7-win32-x64/</span><br><span class="line">node-v48-win32-x64/</span><br></pre></td></tr></table></figure></li><li><p>Run &amp; test</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> electron </tag>
            
            <tag> vue </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>拼音卡风波</title>
      <link href="/2017/11/04/xue-pin-yin-feng-bo/"/>
      <url>/2017/11/04/xue-pin-yin-feng-bo/</url>
      
        <content type="html"><![CDATA[<p>小学每天教3~4个拼音，aoe，iuu，然后是bpmf，dtnl, gkh这样。孩子们似乎完全找不着北，点着d答p，再答f，还能把ba拼成“妈”，把tu拼成“刷”，两三次否定之后小嘴紧闭，眼珠子上看下看，左看右看，企图寻找可以躲避拼音怪兽攻击的庇护所，如果没有被抓住，就躲到桌子、沙发下以及其他在大人看来完全不适合藏身的缝隙里去，被抓住跑不掉就开始顾左右而言他。这时如果再追问，就开始困、渴、装死。</p><p>作为大人很难理解小孩为什么这么困难，大概是因为人一旦掌握某种能力，就自动遗忘没有这种能力时的体会吧。就像学会了骑自行车的人，再也无法体会生手在东倒西歪的窘境，也想不起来自己当初是如何调整动作，适应骑行的。印象中开始学英语的时候，第一个单词student背了快1星期，至于为什么要背那么久，难在哪里一点印象都没有了。现在我用初中时摸索出来的方法还能一天背50个单词，学拼音就没遇到过什么困难，或者是不记得了，只记得向来都是满分100。参加小升初考试的时候，发现隔壁的同学拼音不会写，还觉得很惊奇：这么容易都不会！到自己孩子开始学拼音的时候，才发现拼音入门还真实不容易呢。想来即使把我引以为豪的记单词大法手把手教给孩子们，他们还是会很艰难的吧。但做父母的总不能靠“等她们长大了就会了”，我总要试一试。</p><p>于是画线、裁纸，制作拼音卡片。我的思路很简单，根据孩子认读的速度，把拼音卡片分为熟悉、生疏、不懂三类，重点突破不懂类，巩固生疏类，放在随手可及的地方，随时拿出来考一考。为了区分上下，还在卡片下部画上可(chou)爱(lou)的花、鸟、小黄人。姐姐一看很兴奋，马上明白这是一个抢答游戏，于是拉妹妹一起参与，并且把答对的卡片据为己有。</p><p>孩子们最记不住的是dtnl，二声四声，以及z、c、s和zh、ch、sh的区别。我决定先从简单的开始。<br>我：这是什么？<br>姐：g！yeah！我的！<br>我：这是什么？<br>姐：p！我的！<br>妹：p！哎呀~</p><p>进展不错，我真不愧是教书世家出身，还是有两把刷子的。<br>我拿出一张f：这是什么？<br>姐：k！<br>我：不对。<br>姐：q！<br>妹：f！<br>我：妹妹的。<br>长（脸色不好了）：哼！讨厌！<br>继续增加难度，这次是h。姐姐似乎被刚才的打击吓到了，咕哝着说不出来。妹妹嘴巴张开看了看我，又看了看姐姐，凑到姐姐耳边轻轻呵气。<br>怎奈姐姐要强不领情：我不要你说！<br>妹妹：h<br>我把h交到妹妹手里，姐姐小嘴一扁，准备开始哭。<br>我：不要这么紧张，放松点，再来试试。<br>然而我犯了个严重的错误，拿出来的是l，两个孩子都认不出来。<br>姐：我不玩了！呜~<br>妹：姐姐不要哭，再来玩呀！<br>姐：我不要你管，走开，走开！</p><p>到底发生了什么？我完全没有来得及反应，只觉得一阵烦躁涌上头，决定躲回自己房间冷静下，妹妹也跟了过来。然后我听见嘭的关门声，把姐姐的呜咽隔断了。</p><p>两个孩子长得不一样，性格也大不相同。</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> children </tag>
            
            <tag> parents </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>教小孩，教大人</title>
      <link href="/2017/10/31/jiao-xiao-hai-ff0c-jiao-da-ren/"/>
      <url>/2017/10/31/jiao-xiao-hai-ff0c-jiao-da-ren/</url>
      
        <content type="html"><![CDATA[<blockquote><p>晚上十点多，一个女人的咆哮回荡在整个小区——<br>　　“什么关系？说！到底什么关系？啊？！”<br>　　语气歇斯底里，悲愤中带着凄凉，愤怒中透出哀伤。<br>　　我那颗八卦的心，疯狂地跳动起来，趴到窗台边，支起耳朵认真听下文，在那一瞬间，我听到了无数窗户被拉开时发出的窸窸窣窣声音。<br>　　“互为相反数关系啊！！”<br>　　#￥#3%&amp;<em>#￥%&amp;</em>——<br>　　我默默地关上了窗户。<br> -来自不知名网友的段子</p></blockquote><p>跟拼音怪兽的战斗告一段落，逃回房间装死时突然想到这个，不要问我经历了什么。</p><p>我自问算是理性而好学的人，孩子还没出生的时候就买了一堆关于儿童养育的名著，并且真的读了一些，真的，相信我，我只是年纪大了容易忘。虽然不论是书名还是理论还是其中的故事都不大记得了，但那些文字从我的左眼进去，右眼出来，还是水滴石穿地改变了某些神经回路，并形成根深蒂固的迷信：“不能打骂孩子，不能冷落孩子，要让孩子时刻感受到爱，他（她）们才会身心健康”。这使我时常感到愧疚和悔恨，为自己犯下的邪恶罪行。</p><p>我一年也难得像段子里的妈妈那样狂暴一回，但无效的努力很容易让人只想“够了，我不要做这个了，放弃吧”。这时管控情绪的元神也玩忽职守，自顾悲叹，挫败的病毒迅速吞噬我的血条，发展壮大，并从眼中、口中、气息中散发到房间的每一个角落，传染给其他家人，特别是可怜的孩子，她一定觉得爸爸不爱自己了。太可怕了。现在想来，我当时居然丝毫没有考虑到孩子到底是懒惰赖皮还是不懂得如何准确地表达“这个我真的不懂，我需要帮助”。话说这两种情况需要认真区分吗？不都是要想办法解决吗？</p><p>突然想到，这些年我读的这些书，主要都是说孩子的。准确的说是介绍了孩子的特点，1岁怎么样，2岁怎么样，3岁怎么样，一直到十几岁；然后不吃饭怎么办，不读书怎么办，林林总总一大堆方法。但有一个问题几乎没有涉及，那就是父母会怎么样。所有的书似乎都把父母当成阿尔法狗，只要输入问题应对策略，就能科学地、冷静地、准确地找到最优解，无论这父母最近几星期有几天能在3点前睡觉，最近几天是不是一直被客户/领导追杀。</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> children </tag>
            
            <tag> parents </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>讲故事</title>
      <link href="/2017/10/13/jiang-gu-shi/"/>
      <url>/2017/10/13/jiang-gu-shi/</url>
      
        <content type="html"><![CDATA[<p>给孩子讲故事对我这种平日就不爱说话的人是个苦差事，对孩子则是睡觉仪式的必要组成。</p><p>好吧，今天是周末，爸爸心情还不错，抓起一本童话，赶他们上床，开始讲《画眉鸟国王》。刚念了几句，妹妹爬下来了，指着书上的随便一行字开始自己念。如果是回到家就想装死的工作日，我会一心想着尽快完成任务，对这种打岔行为感到烦躁，生气。但今天是愉快的周末，明天不上班。</p><p>妹妹聪明敏锐，但不爱学习，认得的字少，平时要她写个字，念个书，必定要打滚耍赖，10分钟也学不进一个，还不停地“爸爸打断一下，我想说呀，今天我的好朋友跟我说。。”，或者“爸爸打断一下，我想说呀，妈妈今天给我买了。。。”，真憋气。今年难得她主动开始念，于是我变身为人工点读机，指着讲到的位置，招呼她一起念。遇到简单的字，我就停一下，尽量让妹妹自己先念出来，实在念不出，我就带着她念。已经躺下的姐姐这时也兴致勃勃地坐起来了，跟着我们一起念。</p><p>“长得又大又胖，像个大肥猪”，妹妹念完了“个大”，不认识后面两个字，停住了。</p><p>“又大又胖，像个大什么呢？”我问。</p><p>“嗯。。。”</p><p>“大象！”姐姐抢答。</p><p>“噢，对的，大象确实是又大又胖。当然还有其他又大又胖的动物。”可是孩子们一时想不出来了。</p><p>“长得又大又胖，像个大~~肥猪！”我一面念，一面用双手比出又大又胖的样子，孩子们笑得满地打滚，姐姐也下了床滚过来了。</p><p>姐姐朴实，还事事爱争先。很容易就调动起认字，学习方面的积极性，认得的字也多，这下念得快了些。我自己也变成了小学生，还是班上的故事大王，讲得更起劲了。</p><p>讲到叫花子到王宫唱歌讨饭的时候，我即兴就着吉祥三宝的谱子，唱了一段叫花子讨饭歌，大概是这样的：“陛下，我的肚子饿得扁扁啦，求你给我一个面包，我会歌唱您的美德，大家都听见”，孩子们打滚，蹬腿，模仿我开始各种乱唱：“爸爸，快点继续讲故事，不然我们不会睡觉，啦啦啦。。”</p><p>这个故事实在太长，三次且听下回分解之后，孩子们终于同意睡觉了。</p><p>晚安，亲爱的们。</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> children </tag>
            
            <tag> parents </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>买牙刷记</title>
      <link href="/2017/10/10/mai-ya-shua-ji/"/>
      <url>/2017/10/10/mai-ya-shua-ji/</url>
      
        <content type="html"><![CDATA[<p>我要换个电动牙刷。这个念头像一颗顽强的种子，一旦落到我的脑子里就开始蓬勃生长，不达目的绝不罢休。</p><p>于是搜京东。飞利浦，舒克，博朗，松下，海尔，居然还有小米，牌子好多，遗憾的是没有贝塔。从销量看，飞利浦最高，其次博朗。不过飞利浦也最贵，刷头更是坑爹的70rmb一个。最便宜的有赛嘉，整体价格从20+~200+。从以往的经验看，一个商品品质只要高1%，价格就能提升10%以上。</p><p>那么好的牙刷好在哪里？刷知乎。刷出来一堆软文，结果那个软文的牌子都没记住，真失败。除了软文，要么直接推荐越贵越好，要么就是只要刷头磨圆，频率达到3万+效果都差不多，剩下的就是做工，手感什么的。好吧，我比较接收后一种。还特别关注了一下小米，据说小米刷头使用了某种无铜植毛黑科技，可以避免金属污染。而且小米的外形真不错，刷头才25一个，值得考虑。</p><p>然后回京东刷小米的评价，冲不进电的，用几天坏的有点多。。真纠结。再看看别的牌子，海尔的似乎也不错，180左右还带6支刷头，但外形真难看啊。</p><p>刷淘宝。飞利浦的价格比京东直营便宜100以上，不敢要，纠结。</p><p>2小时过去了。</p><p>老子都42了，按说这年龄应该事业有成，买买买毫不手软，居然为几百块的东西纠结，憋屈。而且如果换的话，独刷刷不如众刷刷，全家老小一起换，心疼钱，继续憋屈。</p><p>老婆进来看见我的京东“哎你在看电动牙刷哈，那天我在超市还想要不要给你买一把”。这句话像氮磷钾肥+乙烯利，瞬间使那颗种子开花结果，瓜熟蒂落。飞利浦不就几百块嘛，干一天不就有了嘛，买！立刻下单，一对，明天送到。</p><p>然而我计算的时候没有乘以全家的总人数。</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
